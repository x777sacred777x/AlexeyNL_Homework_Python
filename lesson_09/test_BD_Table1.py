from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker
from lesson_09.BD_Table1 import Users  # –ò–º–ø–æ—Ä—Ç –º–æ–¥–µ–ª–∏ —Ç–∞–±–ª–∏—Ü—ã Users

# –°—Ç—Ä–æ–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö PostgreSQL
db_connection_string = "postgresql://postgres:123@localhost:5432/postgres"

# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Å—Å–∏–∏


def get_session():
    engine = create_engine(db_connection_string)
    Session = sessionmaker(bind=engine)
    return Session()

# üß™ –¢–µ—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è


def test_add_user():
    new_user_id = 777
    new_user_email = 'user1@mail.ru'
    user_subject_id = 1

    sess = get_session()
    try:
        # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        new_user = Users(
            user_id=new_user_id,
            user_email=new_user_email,
            subject_id=user_subject_id
        )
        sess.add(new_user)
        sess.commit()

        # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω
        result = sess.query(Users).filter(Users.user_id == new_user_id).first()
        assert result is not None, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω."

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö
        assert result.user_id == new_user_id
        assert result.user_email == new_user_email
        assert result.subject_id == user_subject_id

    finally:
        # –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        sess.query(Users).filter(Users.user_id == new_user_id).delete()
        sess.commit()
        sess.close()

# üß™ –¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è


def test_update_user():
    new_user_id = 777
    new_user_email = 'user2@mail.ru'
    user_subject_id = 3
    update_email = 'Update@mail.ru'

    sess = get_session()
    try:
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        new_user = Users(
            user_id=new_user_id,
            user_email=new_user_email,
            subject_id=user_subject_id
        )
        sess.add(new_user)
        sess.commit()

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ email
        sess.query(Users).filter(Users.user_id == new_user_id).update({
            Users.user_email: update_email
        })
        sess.commit()

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        result = sess.query(Users).filter(Users.user_id == new_user_id).first()
        assert result is not None, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω."
        assert result.user_email == update_email
        assert result.subject_id == user_subject_id

    finally:
        # –û—á–∏—Å—Ç–∫–∞
        sess.query(Users).filter(Users.user_id == new_user_id).delete()
        sess.commit()
        sess.close()

# üß™ –¢–µ—Å—Ç —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è


def test_delete_user():
    new_user_id = 888
    new_user_email = 'user3@mail.ru'
    user_subject_id = 2

    sess = get_session()
    try:
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        new_user = Users(
            user_id=new_user_id,
            user_email=new_user_email,
            subject_id=user_subject_id
        )
        sess.add(new_user)
        sess.commit()

        # –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        sess.query(Users).filter(Users.user_id == new_user_id).delete()
        sess.commit()

        # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª—ë–Ω
        result = sess.query(Users).filter(Users.user_id == new_user_id).all()
        assert len(result) == 0, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –±—ã–ª —É–¥–∞–ª—ë–Ω."

    finally:
        sess.close()
